@page "/listadoclientes"
@using Pintureria.Aplicacion
@using Microsoft.JSInterop
@inject ListarClientesUseCase ListarClientesUseCase
@inject IJSRuntime JsRuntime;
@inject EliminarClienteUseCase EliminarClienteUseCase
@inject NavigationManager Navegador

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>NOMBRE</th>
            <th>DNI/CUIT</th>
            <th>DIRECCION</th>
            <th>TELEFONO</th>
            <th>ACCIÃ“N</th>
        </tr>
    </thead>
    <tbody>
        @if (listado != null)
        {
            @foreach (var cli in listado)
            {
                <tr>
                    <td>@cli.Id</td>
                    <td>@cli.Nombre</td>
                    @if (clientesFisicos != null && clientesFisicos.Contains<Cliente>(cli))
                    {
                        ClienteFisico? cf = cli as ClienteFisico; 
                        <td>@cf?.DNI</td>
                    }
                    else
                    {
                        Console.WriteLine(clientesFisicos);
                        ClienteEmpresa? ce = cli as ClienteEmpresa; 
                        <td>@ce?.CUIT</td>
                    }
                    <td>@cli.Direccion</td>
                    <td>@cli.Telefono</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditarCliente(cli)">
                            <i class="oi oi-pencil"></i>
                        </button>
                        <button class="btn btn-danger" @onclick="() => EliminarCliente(cli.Id)">
                            <i class="oi oi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {

    RepositorioSqlite<Cliente>? repositorio;
    IEnumerable<Cliente>? listado;
    IEnumerable<ClienteFisico>? clientesFisicos;
    EliminarClienteUseCase? eliminarClienteUseCase;
    bool esFisico = false;

    protected override void OnInitialized()
    {
        @* RepositorioSqlite<Cliente> repositorio = new RepositorioSqlite<Cliente>(); *@
        listado = ListarClientesUseCase.Ejecutar();
        clientesFisicos = listado.Where(c => EsFisico(c)) as IEnumerable<ClienteFisico>;
    }
    protected bool EsFisico(Cliente unCliente)
    {
        return unCliente is ClienteFisico;
    }

    void EliminarCliente(long id)
    {
        repositorio = new RepositorioSqlite<Cliente>();
        eliminarClienteUseCase = new EliminarClienteUseCase(repositorio);
        EliminarClienteUseCase.Ejecutar(id);
        listado = ListarClientesUseCase.Ejecutar();
    }

    void EditarCliente(Cliente cli)
    {

        if (EsFisico(cli))
        {
            repositorio = new RepositorioSqlite<Cliente>();
            Navegador.NavigateTo("/modificarclientefisico");
        }
        else
        {
            Navegador.NavigateTo("/modificarclienteempresa");
        }
    }

}